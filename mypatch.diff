diff --git a/.vscode/settings.json b/.vscode/settings.json
new file mode 100644
index 00000000..71dc09dc
--- /dev/null
+++ b/.vscode/settings.json
@@ -0,0 +1,5 @@
+{
+    "files.associations": {
+        "guiapp.h": "c"
+    }
+}
\ No newline at end of file
diff --git a/Platform/OpenCanopy/OcBootstrap.c b/Platform/OpenCanopy/OcBootstrap.c
index 1c5496fb..2faf5883 100644
--- a/Platform/OpenCanopy/OcBootstrap.c
+++ b/Platform/OpenCanopy/OcBootstrap.c
@@ -82,7 +82,7 @@ OcShowMenuByOc (
     }
   }
 
-  GuiDrawLoop (&mDrawContext);
+  GuiDrawLoop (&mDrawContext, Context);
   ASSERT (mGuiContext.BootEntry != NULL || mGuiContext.Refresh);
 
   //
diff --git a/Platform/OpenCanopy/OpenCanopy.c b/Platform/OpenCanopy/OpenCanopy.c
index 169ab44e..e0487dfe 100644
--- a/Platform/OpenCanopy/OpenCanopy.c
+++ b/Platform/OpenCanopy/OpenCanopy.c
@@ -16,6 +16,7 @@
 #include <Library/DebugLib.h>
 #include <Library/MemoryAllocationLib.h>
 #include <Library/MtrrLib.h>
+#include <Library/OcBootManagementLib.h>
 #include <Library/OcCompressionLib.h>
 #include <Library/OcCpuLib.h>
 #include <Library/OcGuardLib.h>
@@ -23,8 +24,11 @@
 #include <Library/TimerLib.h>
 #include <Library/UefiBootServicesTableLib.h>
 
+
 #include "OpenCanopy.h"
 #include "GuiIo.h"
+#include "GuiApp.h"
+#include "Views/BootPicker.h"
 
 typedef struct {
   UINT32 MinX;
@@ -33,6 +37,9 @@ typedef struct {
   UINT32 MaxY;
 } GUI_DRAW_REQUEST;
 
+// Context for auto starting the default picked volume
+extern BOOT_PICKER_GUI_CONTEXT mGuiContext;
+extern GUI_VOLUME_PICKER mBootPicker;
 //
 // I/O contexts
 //
@@ -1112,7 +1119,8 @@ GuiGetBaseCoords (
 
 VOID
 GuiDrawLoop (
-  IN OUT GUI_DRAWING_CONTEXT  *DrawContext
+  IN OUT GUI_DRAWING_CONTEXT  *DrawContext,
+  IN     VOID                 *Context OPTIONAL
   )
 {
   EFI_STATUS          Status;
@@ -1123,7 +1131,8 @@ GuiDrawLoop (
   GUI_OBJ             *HoldObject;
   INT64               HoldObjBaseX;
   INT64               HoldObjBaseY;
-
+  STATIC UINT64 StartTimer=0;
+  STATIC BOOLEAN DisableTimer=0;
   CONST LIST_ENTRY    *AnimEntry;
   CONST GUI_ANIMATION *Animation;
 
@@ -1141,6 +1150,13 @@ GuiDrawLoop (
   //
   // Main drawing loop, time and derieve sub-frequencies as required.
   //
+
+  //STATIC BOOLEAN logOnce = 0;
+  if(StartTimer == 0){
+    //only read start time on init
+    StartTimer = GetTimeInNanoSecond(GetPerformanceCounter());
+  }
+
   mStartTsc = AsmReadTsc ();
   do {
     //UINT64 StartTsc = AsmReadTsc ();
@@ -1205,6 +1221,11 @@ GuiDrawLoop (
                                0,
                                &InputKey
                                );
+        //
+        // If detect key press then disable menu timeout 
+        //
+        DisableTimer = 1;
+
         //
         // HACK: MSVC complains about unreachable code.
         //
@@ -1235,8 +1256,17 @@ GuiDrawLoop (
     //
     GuiFlushScreen (DrawContext);
 
-    //UINT64 EndTsc = AsmReadTsc ();
-    //DEBUG ((DEBUG_ERROR, "Loop delta TSC: %lld, target: %lld\n", EndTsc - StartTsc, mDeltaTscTarget));
+
+    //
+    // Exit early if reach timer timeout and timer isn't disabled
+    //
+    UINT64 CurrTime = GetTimeInNanoSecond(GetPerformanceCounter());
+    OC_PICKER_CONTEXT* mContext = (OC_PICKER_CONTEXT*)Context;
+    if(((CurrTime - StartTimer)/1000000000) > mContext->TimeoutSeconds && !DisableTimer){
+      mGuiContext.BootEntry = mBootPicker.SelectedEntry->Context;
+      break;
+    }
+    
   } while (!DrawContext->ExitLoop (DrawContext->GuiContext));
 }
 
diff --git a/Platform/OpenCanopy/OpenCanopy.h b/Platform/OpenCanopy/OpenCanopy.h
index ad6aaa9b..601b6435 100644
--- a/Platform/OpenCanopy/OpenCanopy.h
+++ b/Platform/OpenCanopy/OpenCanopy.h
@@ -245,7 +245,8 @@ GuiViewCurrentCursor (
 
 VOID
 GuiDrawLoop (
-  IN OUT GUI_DRAWING_CONTEXT  *DrawContext
+  IN OUT GUI_DRAWING_CONTEXT  *DrawContext,
+  IN     VOID                 *Context OPTIONAL
   );
 
 EFI_STATUS
diff --git a/Platform/OpenCanopy/Views/BootPicker.c b/Platform/OpenCanopy/Views/BootPicker.c
index 9a8f02ad..fb013320 100644
--- a/Platform/OpenCanopy/Views/BootPicker.c
+++ b/Platform/OpenCanopy/Views/BootPicker.c
@@ -22,25 +22,8 @@
 #include "../OpenCanopy.h"
 #include "../BmfLib.h"
 #include "../GuiApp.h"
+#include "BootPicker.h"
 
-typedef struct {
-  GUI_OBJ_CHILD         Hdr;
-  CONST GUI_IMAGE       *ClickImage;
-  CONST GUI_IMAGE       *CurrentImage;
-} GUI_OBJ_CLICKABLE;
-
-typedef struct {
-  GUI_OBJ_CHILD   Hdr;
-  GUI_IMAGE       EntryIcon;
-  GUI_IMAGE       Label;
-  VOID            *Context;
-  BOOLEAN         CustomIcon;
-} GUI_VOLUME_ENTRY;
-
-typedef struct {
-  GUI_OBJ_CHILD    Hdr;
-  GUI_VOLUME_ENTRY *SelectedEntry;
-} GUI_VOLUME_PICKER;
 
 extern GUI_OBJ           mBootPickerView;
 extern GUI_VOLUME_PICKER mBootPicker;
diff --git a/Platform/OpenCanopy/Views/BootPicker.h b/Platform/OpenCanopy/Views/BootPicker.h
new file mode 100644
index 00000000..84123189
--- /dev/null
+++ b/Platform/OpenCanopy/Views/BootPicker.h
@@ -0,0 +1,31 @@
+/** @file
+  This file is part of OpenCanopy, OpenCore GUI.
+
+  Copyright (c) 2018-2019, Download-Fritz. All rights reserved.<BR>
+  SPDX-License-Identifier: BSD-3-Clause
+**/
+
+#ifndef BOOT_PICKER_H
+#define BOOT_PICKER_H
+
+typedef struct {
+  GUI_OBJ_CHILD         Hdr;
+  CONST GUI_IMAGE       *ClickImage;
+  CONST GUI_IMAGE       *CurrentImage;
+} GUI_OBJ_CLICKABLE;
+
+typedef struct {
+  GUI_OBJ_CHILD   Hdr;
+  GUI_IMAGE       EntryIcon;
+  GUI_IMAGE       Label;
+  VOID            *Context;
+  BOOLEAN         CustomIcon;
+} GUI_VOLUME_ENTRY;
+
+typedef struct {
+  GUI_OBJ_CHILD    Hdr;
+  GUI_VOLUME_ENTRY *SelectedEntry;
+} GUI_VOLUME_PICKER;
+
+
+#endif // BOOT_PICKER_H
\ No newline at end of file
